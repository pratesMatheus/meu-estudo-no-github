export declare function canonicalizeJwk(jwk: JsonWebKey & {
    kty: "RSA";
}): JsonWebKey;
export declare function canonicalizeJwk(jwk: JsonWebKey & {
    kty: "EC";
}): JsonWebKey;
export declare function canonicalizeJwk(jwk: JsonWebKey & {
    kty: "oct";
}): JsonWebKey;
export declare function canonicalizeJwk(jwk: JsonWebKey): JsonWebKey | undefined;
declare type HashAlg = "SHA-256" | "SHA-512";
declare type Encodings = 'numbers' | 'hex' | 'uint8array' | 'base64url';
declare type EcType = {
    numbers: number[];
    hex: string;
    uint8array: Uint8Array;
    base64url: string;
};
export declare function jwkThumbprintByEncoding<Ec extends Encodings>(jwk: JsonWebKey & {
    kty: "RSA" | "EC" | "oct";
}, hashAlg: HashAlg, ec: Ec): EcType[Ec];
export declare function jwkThumbprintByEncoding<Ec extends Encodings>(jwk: JsonWebKey, hashAlg: HashAlg, ec: Ec): EcType[Ec] | undefined;
export declare function jwkThumbprint<Ec extends Encodings>(jwk: JsonWebKey & {
    kty: "RSA" | "EC" | "oct";
}, hashAlg: HashAlg): Uint8Array;
export declare function jwkThumbprint<Ec extends Encodings>(jwk: JsonWebKey, hashAlg: HashAlg): Uint8Array | undefined;
export {};
