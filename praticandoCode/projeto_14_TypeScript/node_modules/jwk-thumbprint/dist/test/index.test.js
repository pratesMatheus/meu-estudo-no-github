"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var src_1 = require("../src");
var assert = require("power-assert");
describe('jwk-thumbprint', function () {
    it('should return the same thumbprint as an example in RFC7638', function () {
        var jwk = {
            "kty": "RSA",
            "n": "0vx7agoebGcQSuuPiLJXZptN9nndrQmbXEps2aiAFbWhM78LhWx4cbbfAAtVT86zwu1RK7aPFFxuhDR1L6tSoc_BJECPebWKRXjBZCiFV4n3oknjhMstn64tZ_2W-5JsGY4Hc5n9yBXArwl93lqt7_RN5w6Cf0h4QyQ5v-65YGjQR0_FDW2QvzqY368QQMicAtaSqzs8KJZgnYb9c7d0zgdAZHzu6qMQvRL5hajrn1n91CbOpbISD08qNLyrdkt-bFTWhAI4vMQFh6WeZu0fM4lFd2NcRwr3XPksINHaQ-G_xBniIqbw0Ls1jF44-csFCur-kEgU8awapJzKnqDKgw",
            "e": "AQAB",
            "alg": "RS256",
            "kid": "2011-04-29"
        };
        var expectNumbers = [
            55, 54, 203, 177, 120, 124, 184, 48, 156, 119, 238, 140, 55, 5, 197,
            225, 111, 251, 158, 133, 151, 21, 144, 31, 30, 76, 89, 177, 17, 130,
            245, 123
        ];
        {
            var actual = src_1.jwkThumbprintByEncoding(jwk, "SHA-256", 'numbers');
            assert.deepStrictEqual(actual, expectNumbers);
        }
        {
            var actual = src_1.jwkThumbprintByEncoding(jwk, "SHA-256", 'hex');
            var expect = '3736cbb1787cb8309c77ee8c3705c5e16ffb9e859715901f1e4c59b11182f57b';
            assert.deepStrictEqual(actual, expect);
        }
        {
            var actual = src_1.jwkThumbprint(jwk, "SHA-256");
            var expect = new Uint8Array(expectNumbers);
            assert.deepStrictEqual(actual, expect);
        }
        {
            var actual = src_1.jwkThumbprintByEncoding(jwk, "SHA-256", 'base64url');
            var expect = "NzbLsXh8uDCcd-6MNwXF4W_7noWXFZAfHkxZsRGC9Xs";
            assert.deepStrictEqual(actual, expect);
        }
    });
    it('should return symmetric key thumbprint', function () {
        var jwk = {
            "alg": "A128GCM",
            "ext": true,
            "k": "9wcPr5BVF6hku5Fx3IrejQ",
            "key_ops": ["encrypt", "decrypt"],
            "kty": "oct"
        };
        var actual = src_1.jwkThumbprintByEncoding(jwk, "SHA-256", 'base64url');
        var expect = "O0ohsAio8Tj1lGR2SoX3Xa90quibp6j3vSe71e0LXRY";
        assert.deepStrictEqual(actual, expect);
    });
});
//# sourceMappingURL=index.test.js.map